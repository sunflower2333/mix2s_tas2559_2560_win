/*****************************************************************

               AUTO GENERATED BY FTRACE_PARSER

*******************************************************************/

#pragma once
VOID
SpbWriteRead(
    PSPB_CONTEXT SpbContext,
    UINT8* i_data,
    UINT8* r_data,
    UINT16 i_len,
    UINT16 o_len,
    UINT8 dev
);

#define WA(...) {                                                                                           \
    SpbDeviceWrite(&pDevice->SpbContextA, (UINT8[]){ __VA_ARGS__ }, sizeof((UINT8[]){ __VA_ARGS__ }));  \
}


#define WB(...) {                                                                                           \
    SpbDeviceWrite(&pDevice->SpbContextB, (UINT8[]){ __VA_ARGS__ }, sizeof((UINT8[]){ __VA_ARGS__ }));  \
}

#define WRA(i_len,...) {                                                                    \
    UINT8 buf[] = { ##__VA_ARGS__ };                                                        \
    SpbWriteRead(&pDevice->SpbContextA, &buf[0], &buf[i_len], i_len, sizeof(buf) - i_len, 1);  \
}

#define WRB(i_len,...) {                                                                    \
    UINT8 buf[] = { ##__VA_ARGS__ };                                                        \
    SpbWriteRead(&pDevice->SpbContextB, &buf[0], &buf[i_len], i_len, sizeof(buf) - i_len, 2);  \
}

#define DELAY_ONE_MICROSECOND (-10)
#define DELAY_ONE_MILLISECOND (DELAY_ONE_MICROSECOND*1000)

// Micro Sec
#define DELAY_MS(msec)  {                                                   \
    LARGE_INTEGER interval;                                              \
    interval.QuadPart = DELAY_ONE_MILLISECOND;                           \
    interval.QuadPart *= msec;                                           \
    KeDelayExecutionThread(KernelMode, 0, &interval);                    \
}

// Milli Sec
#define DELAY_US(msec)  {                                                   \
    LARGE_INTEGER interval;                                              \
    interval.QuadPart = DELAY_ONE_MICROSECOND;                           \
    interval.QuadPart *= msec;                                           \
    KeDelayExecutionThread(KernelMode, 0, &interval);                    \
}

VOID CalAmp1(PDEVICE_CONTEXT pDevice);
VOID CalAmp2(PDEVICE_CONTEXT pDevice);
NTSTATUS SetupfwAmp(PDEVICE_CONTEXT pDevice);
